@page
@model Dental_Surgery.Pages.Receptionist.IndexModel
@{
}

<head>
    <meta charset="UTF-8" />
   <style>
       
        h1 {
            text-align: center;
            margin-bottom: 20px;
            color: #2c3e50;
        }

        body {
            background: linear-gradient(to right, #00C9FF, #92FE9D);
            height: 100vh;
            justify-content: center;
            align-items: center;
        }

        /* Container for the Appointment Form and Time Slots */
        .appointment-container {
            display: flex;
            gap: 20px;
            max-width: 1200px;
            margin: 0 auto;
            background-color: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Left Column: Form Inputs */
        .form-column {
            flex: 1;
            padding: 20px;
            border-right: 1px solid #ddd;
        }

            .form-column label {
                display: block;
                margin-bottom: 8px;
                font-weight: bold;
                color: #555;
            }

            .form-column input[type="text"]
            {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
                font-size: 1em;
                transition: border-color 0.3s ease;
            }

            .form-column input[type="date"],
            .form-column select,
            .form-column textarea {
                width: 100%;
                padding: 10px;
                margin-bottom: 15px;
                border: 1px solid #ccc;
                border-radius: 5px;
                font-size: 1em;
                transition: border-color 0.3s ease;
            }

                .form-column input[type="text"]:focus,
                .form-column input[type="date"]:focus,
                .form-column select:focus,
                .form-column textarea:focus {
                    border-color: #3498db;
                    outline: none;
                }

            .form-column textarea {
                resize: vertical;
                min-height: 100px;
            }

        /* Patient Search Suggestions */
        .suggestion-box {
            position: absolute;
            background: white;
            border: 1px solid #ccc;
            max-height: 200px;
            overflow-y: auto;
            width: 250px;
            display: none;
            z-index: 1000;
        }

        .suggestion-item {
            padding: 10px;
            cursor: pointer;
        }

            .suggestion-item:hover {
                background-color: #f0f0f0;
            }

        /* Right Column: Time Slots */
        .slots-column {
            flex: 1;
            padding: 20px;
        }

        .selected-date {
            font-size: 1.2em;
            margin-bottom: 20px;
            color: #2c3e50;
            font-weight: bold;
        }

        .today-indicator {
            color: #e74c3c;
            font-weight: normal;
        }

        /* Calendar Table */
        .calendar {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px;
        }

            .calendar th,
            .calendar td {
                padding: 10px;
                text-align: center;
                border: 1px solid #ddd;
            }

            .calendar th {
                background-color: #3498db;
                color: #fff;
                font-weight: bold;
            }

            .calendar td {
                background-color: #f9f9f9;
                transition: background-color 0.3s ease;
            }

                

                .calendar td:hover {
                    background-color: #e0f7fa;
                }

        /* Time Slots */
        .time-slots {
            margin-top: 10px;
        }

        .slot {
            padding: 8px;
            margin: 5px 0;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

            .slot.available {
                background-color: #d5f5e3;
                color: #27ae60;
            }

            .slot.booked {
                background-color: #f8d7da;
                color: #dc3545;
                cursor: not-allowed;
            }

            .slot.selected {
                background-color: #3498db;
                color: #fff;
                transform: scale(1.05);
            }

        /* Buttons */
        button {
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            font-size: 1em;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            button[type="submit"] {
                background-color: #3498db;
                color: #fff;
            }

                button[type="submit"]:hover {
                    background-color: #2980b9;
                }

        .submit-button {
            width: 100%;
            margin-top: 10px;
        }


        .form-column {
            border-right: none;
            border-bottom: 1px solid #ddd;
            padding-bottom: 20px;
        }

        .slots-column {
            padding-top: 20px;
        }

   </style>
</head>
<body>
    <h1>Dental Appointment</h1>

    <div class="appointment-container">
        <!-- Left Column: Form Inputs -->
        <div class="form-column">
            <form method="post" id="mainForm">
                <!-- Dentist Selection -->
                <label for="dentistSelect">Dentist:</label>
                <select id="dentistSelect" name="Appointment.DentistId"
                        asp-for="Appointment.DentistId"
                        onchange="document.getElementById('fetchAvailabilityBtn').click()"
                        required>
                    <option value="">-- Select Dentist --</option>
                    @foreach (var dentist in Model.Dentists)
                    {
                        <option value="@dentist.DentistId">@dentist.FirstName</option>
                    }
                </select>

                <!-- Date Selection -->
                <label for="appointmentDate">Date:</label>
                <input type="date" id="appointmentDate"
                       name="Appointment.AppointmentDate"
                       asp-for="Appointment.AppointmentDate"
                       value="@Model.Appointment.AppointmentDate.ToString("yyyy-MM-dd")"
                       onchange="document.getElementById('fetchAvailabilityBtn').click()"
                       min="@DateTime.Today.ToString("yyyy-MM-dd")"
                       required />

                <!-- Patient Selection -->
                <label for="patientSearch">Patient:</label>
                <input type="text" id="patientSearch" placeholder="Enter name or PPS" onkeyup="searchPatients()" autocomplete="off" />
                <input type="hidden" id="patientId" name="Appointment.PatientId" required /> <!-- Stores selected patient ID -->
                <div id="suggestions" class="suggestion-box"></div>

                <!-- Notes -->
                <label for="notes">Notes:</label>
                <textarea id="notes" name="Appointment.Notes" asp-for="Appointment.Notes"></textarea>

                <!-- Hidden Time Slot -->
                <input type="hidden" id="selectedTime"
                       name="SelectedTime"
                       asp-for="SelectedTime" />

                <!-- Buttons -->
                <button type="submit" asp-page-handler="FetchAvailability"
                        id="fetchAvailabilityBtn"
                        style="display: none;">
                    Refresh Slots
                </button>

                <button type="submit" asp-page-handler="CreateAppointment"
                        class="submit-button">
                    Create Appointment
                </button>
            </form>
        </div>

        <!-- Right Column: Time Slots -->
        <div class="slots-column">
            <!-- Selected Date -->
            <div class="selected-date">
                <span>Selected Date: @Model.Appointment.AppointmentDate.ToString("yyyy-MM-dd")</span>
                @if (Model.Appointment.AppointmentDate.Date == DateTime.Today)
                {
                    <span class="today-indicator">(Today)</span>
                }
            </div>

            <!-- Calendar Section -->
            <table class="calendar">
                <thead>
                    <tr>
                        <th>Monday</th>
                        <th>Tuesday</th>
                        <th>Wednesday</th>
                        <th>Thursday</th>
                        <th>Friday</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        @{
                            var startOfWeek = Model.Appointment.AppointmentDate.StartOfWeek(DayOfWeek.Monday);
                            for (int i = 0; i < 5; i++)
                            {
                                var day = startOfWeek.AddDays(i);
                                <string>
                                    <td class="day @(day == Model.Appointment.AppointmentDate ? "selected" : "")" data-date="@day.ToString("yyyy-MM-dd")">
                                        @day.ToString("MMM dd")
                                        <div class="time-slots">
                                            @foreach (var slot in Model.TimeSlotsWithAvailability.Where(ts => ts.Date == day.Date))
                                            {
                                                <div class="slot @(slot.IsBooked ? "booked" : "available")"
                                                     data-time="@slot.TimeSlot"
                                                     onclick="selectTimeSlot(this)">
                                                    @slot.TimeSlot - @(slot.IsBooked ? "Booked" : "Available")
                                                </div>
                                            }
                                        </div>
                                    </td>
                                </string>
                            }
                        }
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function selectTimeSlot(slot) {
            // Check if the slot is booked
            if (slot.classList.contains("booked")) {
                return; // Do nothing if the slot is booked
            }

            // Remove glow from all slots
            document.querySelectorAll(".slot").forEach(s => s.classList.remove("selected"));

            // Add glow to the clicked slot
            slot.classList.add("selected");

            // Update hidden input
            document.getElementById("selectedTime").value = slot.getAttribute("data-time");

            // Update date input field
            const selectedDate = slot.closest("td").getAttribute("data-date");
            document.getElementById("appointmentDate").value = selectedDate;

            console.log("Selected Time (via data-time):", slot.getAttribute("data-time"));
            console.log("Selected Date (via data-date):", selectedDate);
        }

        async function searchPatients() {
            let query = document.getElementById("patientSearch").value;
            let suggestionsBox = document.getElementById("suggestions");

            if (query.length < 1) {
                suggestionsBox.style.display = "none";
                return;
            }

            // Fetch matching patients
            let response = await fetch(`/Receptionist/Index?handler=SearchPatients&query=${query}`);
            let patients = await response.json();

            // Clear previous suggestions
            suggestionsBox.innerHTML = "";
            suggestionsBox.style.display = patients.length > 0 ? "block" : "none";

            // Populate suggestions
            patients.forEach(patient => {
                let div = document.createElement("div");
                div.classList.add("suggestion-item");
                div.textContent = `${patient.firstName} ${patient.lastName} (${patient.pps})`;
                div.onclick = () => selectPatient(patient.patientId, div.textContent);
                suggestionsBox.appendChild(div);
            });
        }

        function selectPatient(id, text) {
            document.getElementById("patientSearch").value = text;
            document.getElementById("patientId").value = id;
            document.getElementById("suggestions").style.display = "none";
        }

        document.addEventListener("click", function (event) {
            let suggestionsBox = document.getElementById("suggestions");
            if (!document.getElementById("patientSearch").contains(event.target) && !suggestionsBox.contains(event.target)) {
                suggestionsBox.style.display = "none";
            }
        });
    </script>

</body>
