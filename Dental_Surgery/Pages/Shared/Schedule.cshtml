@page
@model Dental_Surgery.Pages.Shared.ScheduleModel
@{
	ViewData["Title"] = "Daily Schedule";
	var hour = DateTime.Now.Hour;
	var greeting = hour < 12 ? "Good morning" : (hour < 16 ? "Good afternoon" : "Good evening");
}

<script src="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js"></script>

@* Greeting message & date selector *@
<div class="container mt-4">
	<div class="d-flex justify-content-between align-items-end mb-4">
		<h2 class="mb-0 align-self-end">
			@greeting@if (Model.IsDentist)
			{
				<text>, @Model.Dentist.FirstName</text>
			}
		</h2>

		<form method="get" class="d-flex align-items-end">
			<div class="btn-group me-2">
				<a asp-page="./Schedule"
				   asp-route-ScheduleDate="@Model.ScheduleDate.AddDays(-1).ToString("yyyy-MM-dd")"
				   class="btn btn-secondary" title="Previous day"><i data-feather="chevron-left"></i></a>
				<input type="date"
					   name="ScheduleDate"
					   value="@Model.ScheduleDate.ToString("yyyy-MM-dd")"
					   class="form-control"
					   style="max-width: 200px; font-weight: bold; text-align: center; cursor: pointer;"
					   onchange="this.form.submit()" />
				<a asp-page="./Schedule"
				   asp-route-ScheduleDate="@Model.ScheduleDate.AddDays(1).ToString("yyyy-MM-dd")"
				   class="btn btn-secondary" title="Next Day"><i data-feather="chevron-right"></i></a>
			</div>
		</form>
	</div>

	@* table headings *@
	<div class="table-responsive">
		<table class="table table-bordered align-middle table-white">
			<thead class="table-dark">
				<tr>
					<th>Time</th>
					@if (!Model.IsDentist)
					{
						<th>Dentist</th>
					}
					<th class="patient-column">
						<div class="d-flex justify-content-between align-items-center">
							<span id="patientHeaderText">Patient</span>
							<i data-feather="search" class="search-icon" style="cursor: pointer;" onclick="togglePatientSearch()"></i>
						</div>
						<div class="patient-search-container" style="display: none;">
							<input type="text"
								   id="patientSearch"
								   class="form-control w-100 border-0 rounded-10 bg-white"
								   placeholder="Search for patient..."
								   onkeyup="searchPatients()" />
						</div>
					</th>
					<th>Treatment</th>
					@if (!Model.IsDentist)
					{
						<th>Attended</th>
					}

				</tr>
			</thead>

			@* body of schedule table *@
			<tbody id="appointmentsTBody">
				@if (Model.DailyAppointments.Any())
				{

					@foreach (var appt in Model.DailyAppointments)
					{
						<tr class="appointment-row clickable-row"
							data-patient-name="@($"{appt.Patient?.FirstName} {appt.Patient?.LastName}")"
							data-href="/Admin2/Appointments/Details?id=@appt.AppointmentId">

							<td>@appt.AppointmentDate.ToString("HH:mm")</td>
							@if (!Model.IsDentist)
							{
								<td>@appt.Dentist?.FirstName @appt.Dentist?.LastName</td>
							}
							<td>@appt.Patient?.FirstName @appt.Patient?.LastName</td>
							<td>@appt.Treatment?.Name</td>
							@if (!Model.IsDentist)
							{
								<td>
									<div class="form-check d-flex justify-content-center">
										<input class="form-check-input attendance-checkbox"
											   type="checkbox"
											   data-id="@appt.AppointmentId"
										@(appt.attend ? "checked" : "") />
									</div>
								</td>
							}

						</tr>
					}
				}
				else
				{
					<tr class="appointment-row">
						<td colspan="@(Model.IsDentist ? "3" : "4")" class="border-0">No appointments.</td>
					</tr>
				}
			</tbody>




		</table>
	</div>


</div>
@section Scripts {
	<script>
		feather.replace();

		// Makes rows clickable
		document.querySelectorAll('.clickable-row').forEach(row => {
			row.addEventListener('click', () => {
				window.location = row.getAttribute('data-href');
			});
		});

		// define the functions first, won't work otherwise
		function togglePatientSearch() {
			const searchContainer = document.querySelector('.patient-search-container');
			const patientHeaderText = document.getElementById('patientHeaderText');
			const searchIcon = document.querySelector('.search-icon');
			const isVisible = searchContainer.style.display === 'block';

			if (isVisible) {
				searchContainer.style.display = 'none';
				patientHeaderText.style.display = '';
				searchIcon.style.display = '';
			} else {
				searchContainer.style.display = 'block';
				patientHeaderText.style.display = 'none';
				searchIcon.style.display = 'none';
				document.getElementById('patientSearch').focus();
			}
		}

		//shows rows if they match the search term
		function searchPatients() {
			const searchTerm = document.getElementById('patientSearch').value.toLowerCase();
			const rows = document.querySelectorAll('.appointment-row');

			rows.forEach(row => {
				const patientName = row.getAttribute('data-patient-name').toLowerCase();
				if (patientName.includes(searchTerm)) {
					row.style.display = '';
				} else {
					row.style.display = 'none';
				}
			});
		}

		// Close search when clicking outside
		document.addEventListener('click', function (event) {
			const searchContainer = document.querySelector('.patient-search-container');
			const searchIcon = document.querySelector('.search-icon');
			const patientHeaderText = document.getElementById('patientHeaderText');

			if (!searchContainer.contains(event.target) && event.target !== searchIcon) {
				searchContainer.style.display = 'none';
				patientHeaderText.style.display = '';
				searchIcon.style.display = '';
			}
		});

		// Attendance checkbox functionality
		document.querySelectorAll('.attendance-checkbox').forEach(box => {
			// stops clicking the checkbox also triggering a click on the row (opening appt details)
				e.stopPropagation();
			});

			box.addEventListener('change', async () => {
				const appointmentId = parseInt(box.getAttribute('data-id'));
				const attend = box.checked;

				console.log("Sending to server:", { id: appointmentId, attend });

				const response = await fetch('/Admin2/Appointments/UpdateAttendance?handler=Update', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify({ id: appointmentId, attend: attend })
				});

				const responseText = await response.text();
				console.log("Response status:", response.status);
				console.log("Response body:", responseText);

				if (!response.ok) {
					alert("Failed to update attendance.");
					box.checked = !attend;
				}
			});
		});
	</script>
}
<style>
	.patient-column {
		position: relative;
	}

	/* changing how patient heading appears when search input appears inside it, stays dark*/
	.patient-search-container {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: var(--bs-dark);
		padding: 0.5rem;
	}

		.patient-search-container input {
			height: 100%;
			outline: none;
			box-shadow: none;
			border: none !important;
		}

			.patient-search-container input:focus {
				outline: none !important;
				box-shadow: none !important;
				border-color: transparent !important; /* overriding bootstrap's goofy auto border around search inputs */
			}

	.patient-column .d-flex {
		height: 100%;
	}
	/* hover effects for table rows */
	.clickable-row {
		cursor: pointer;
	}

		.clickable-row:hover {
			background-color: rgba(0, 0, 0, 0.05);
			transform: translateY(-1px);
			box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
		}
</style>